{"version":3,"file":"js/328.5271d51f.js","mappings":"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","sources":["webpack://vue-portfolio/./src/components/GridCard.vue","webpack://vue-portfolio/./src/components/GridCard.vue?4418"],"sourcesContent":["<template>\r\n    <div @keydown.left=\"selectedIndex == null ? switchGridCard($event, false) : decreaseSelection()\" @keydown.right=\"selectedIndex == null ? switchGridCard($event, true) : increaseSelection()\" tabindex=\"0\" class=\"grid__card\" @focusin=\"toggleGridCard($event, true)\" @blur=\"toggleGridCard($event, false)\" :style=\"'background-image: url(\\''+backgroundImage+'\\')'\">\r\n        <div class=\"grid__card-content__wrapper\">\r\n            <h2 class=\"grid__card-title text-l\">{{ title }}</h2>\r\n            <p class=\"grid__card-subtitle text-xs\">{{ description }}</p>\r\n            <div v-if=\"disableUnfold\" class=\"grid__card-hover-text text-xs\">\r\n              <slot></slot>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid__card__list\">\r\n          <div class=\"grid__card__list-item\">\r\n              <video v-if=\"heroVideo\" muted autoplay loop class=\"grid__card__list-item__picture\" :src=\"heroVideo\" type=\"video/mp4\" loading=\"lazy\" />\r\n              <img v-else class=\"grid__card__list-item__picture\" :src=\"heroImage\" loading=\"lazy\" />\r\n              <div class=\"grid__card__list-item__content-wrapper\">\r\n                <ul class=\"grid__card__media-list\" v-if=\"media !== null\">\r\n                    <li class=\"grid__card__media-item\" v-for=\"(item, index) in media\" v-bind:key=\"index\" @click=\"selectedIndex = index\">\r\n                      <video v-if=\"item.type == 'video'\" muted :src=\"item.thumbnailPath || item.path\" type=\"video/mp4\" loading=\"lazy\" />\r\n                      <img v-else-if=\"item.type == 'image'\" :src=\"item.thumbnailPath || item.path\" loading=\"lazy\" />\r\n                      <iframe v-else @click=\"selectedIndex = index\" width=\"80\" height=\"80\" :src=\"item.path\" title=\"YouTube video player\" frameborder=\"0\" disabled referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen loading=\"lazy\"></iframe>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"grid__card__text text-xs\">\r\n                    <p v-if=\"text\">{{ text }}</p>\r\n                    <slot v-else></slot>\r\n                    <div v-if=\"selectedIndex !== null\" class=\"grid__card__list-item__pop-up\" @click.self=\"selectedIndex = null\">\r\n                        <video v-if=\"media[selectedIndex].type == 'video'\" muted controls autoplay loop :src=\"media[selectedIndex].path\" type=\"video/mp4\" loading=\"lazy\" />\r\n                        <img v-else-if=\"media[selectedIndex].type == 'image'\" :src=\"media[selectedIndex].path\" loading=\"lazy\" />\r\n                        <iframe v-else width=\"560\" height=\"315\" :src=\"media[selectedIndex].path\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen loading=\"lazy\"></iframe>\r\n                        <div v-if=\"media.length > 1\" class=\"pop-up__arrows\">\r\n                          <button class=\"pop-up__arrow pop-up__arrow--left\" :class=\"{'enabled':selectedIndex > 0}\" @click.prevent=\"decreaseSelection\"><</button>\r\n                          <button class=\"pop-up__arrow pop-up__arrow--right\" :class=\"{'enabled': selectedIndex < media.length - 1}\" @click.prevent=\"increaseSelection\">></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport SectionComponent from \"./SectionComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    SectionComponent,\r\n  },\r\n  emits: ['toggleGridCard'],\r\n  props: ['title', 'description', 'text', 'heroImage', 'backgroundImage', 'heroVideo', 'media', 'disableUnfold'],\r\n    data() {\r\n    return {\r\n        title: this.title,\r\n        description: this.description,\r\n        text: this.text,\r\n        heroImage: this.heroImage,\r\n        backgroundImage: this.backgroundImage,\r\n        heroVideo: this.heroVideo,\r\n        media: this.media || null,\r\n        disableUnfold: this.disableUnfold,\r\n        selectedIndex: null,\r\n        hasFocus: false\r\n    }\r\n  },\r\n  methods: {\r\n    toggleGridCard(event, newState, isOverlay) {\r\n      this.$emit('toggleGridCard', {'event': event, 'newState': newState, 'isOverlay': isOverlay, 'element': this.$el, 'disableUnfold': this.disableUnfold} )\r\n    },\r\n    preventClose(event) {\r\n      event.preventDefault()\r\n    },\r\n    increaseSelection() {\r\n      this.selectedIndex < this.media.length - 1 ? this.selectedIndex++ : false\r\n    },\r\n    decreaseSelection() {\r\n      this.selectedIndex > 0 ? this.selectedIndex-- : false\r\n    },\r\n    switchGridCard(event, next) {\r\n      if(next) {\r\n        if(event.target.nextSibling) {\r\n          event.target.nextSibling.focus()\r\n        } else {\r\n          if(event.target.parentElement.nextSibling) {\r\n            event.target.parentElement.nextSibling.children[0].focus()\r\n          }\r\n        }\r\n      } else {\r\n        if(event.target.previousSibling) {\r\n          event.target.previousSibling.focus()\r\n        } else {\r\n          if(event.target.parentElement.previousSibling) {\r\n            event.target.parentElement.previousSibling.lastChild?.focus()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</script>","import { render } from \"./GridCard.vue?vue&type=template&id=14586f94\"\nimport script from \"./GridCard.vue?vue&type=script&lang=js\"\nexport * from \"./GridCard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","onKeydown","$data","selectedIndex","$options","switchGridCard","$event","decreaseSelection","increaseSelection","tabindex","onFocusin","_cache","toggleGridCard","onBlur","style","_normalizeStyle","backgroundImage","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","title","_hoisted_3","description","disableUnfold","_hoisted_4","_renderSlot","_ctx","$slots","_hoisted_5","_hoisted_6","heroVideo","muted","autoplay","loop","src","type","loading","heroImage","_hoisted_9","media","_hoisted_10","_Fragment","_renderList","item","index","key","onClick","thumbnailPath","path","width","height","frameborder","disabled","referrerpolicy","allowfullscreen","_hoisted_15","text","_hoisted_16","_withModifiers","controls","allow","length","_hoisted_20","_normalizeClass","args","components","SectionComponent","emits","props","data","this","hasFocus","methods","event","newState","isOverlay","$emit","$el","preventClose","preventDefault","next","target","nextSibling","focus","parentElement","children","previousSibling","lastChild","__exports__","render"],"sourceRoot":""}